version: 1

project_name: chatgpt-adapter
before:
  # https://goreleaser.com/customization/hooks/
  hooks:
    # tidy up and lint
    - go mod tidy
    # - go fmt ./...
builds:
  # https://goreleaser.com/customization/build/
  - main: ./cmd/command.go
    binary: chatgpt-adapter
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
      - ppc64
    goarm:
      - 6
      - 7
    ignore:
      - goos: windows
        goarch: arm
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser -X main.treeState={{ .IsGitDirty }}
    
dockers:
  # https://goreleaser.com/customization/docker/
  - use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - "ghcr.io/jonntd/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "ghcr.io/jonntd/{{ .ProjectName }}:latest-amd64"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
    extra_files:
      - ./config.yaml
  - use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - "ghcr.io/jonntd/{{ .ProjectName }}:{{ .Version }}-arm64v8"
      - "ghcr.io/jonntd/{{ .ProjectName }}:latest-arm64v8"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64/v8"
    extra_files:
      - ./config.yaml
  - use: buildx
    goos: linux
    goarch: arm
    goarm: 6
    image_templates:
      - "ghcr.io/jonntd/{{ .ProjectName }}:{{ .Version }}-armv6"
      - "ghcr.io/jonntd/{{ .ProjectName }}:latest-armv6"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm/v6"
    extra_files:
      - ./config.yaml
  - use: buildx
    goos: linux
    goarch: arm
    goarm: 7
    image_templates:
      - "ghcr.io/jonntd/{{ .ProjectName }}:{{ .Version }}-armv7"
      - "ghcr.io/jonntd/{{ .ProjectName }}:latest-armv7"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm/v7"

    extra_files:
      - ./config.yaml
docker_manifests:
  # https://goreleaser.com/customization/docker_manifest/
  - name_template: ghcr.io/jonntd/{{ .ProjectName }}:{{ .Version }}
    image_templates:
      - ghcr.io/jonntd/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/jonntd/{{ .ProjectName }}:{{ .Version }}-arm64v8
      - ghcr.io/jonntd/{{ .ProjectName }}:{{ .Version }}-armv6
      - ghcr.io/jonntd/{{ .ProjectName }}:{{ .Version }}-armv7
  - name_template: ghcr.io/jonntd/{{ .ProjectName }}:latest
    image_templates:
      - ghcr.io/jonntd/{{ .ProjectName }}:latest-amd64
      - ghcr.io/jonntd/{{ .ProjectName }}:latest-arm64v8
      - ghcr.io/jonntd/{{ .ProjectName }}:latest-armv6
      - ghcr.io/jonntd/{{ .ProjectName }}:latest-armv7
archives:
  - id: archive
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}_v{{ .Arm }}{{ end }}"
    format_overrides:
      - goos: windows
        format: zip
    files:
      - config.yaml
      - README.md
checksum:
  # https://goreleaser.com/customization/checksum/
  name_template: 'checksums.txt'
snapshot:
  # https://goreleaser.com/customization/snapshots/
  name_template: "{{ incpatch .Version }}-SNAPSHOT"
source:
  # https://goreleaser.com/customization/source/
  enabled: true
